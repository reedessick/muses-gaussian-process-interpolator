#!/usr/bin/env python3

"""sample hyperparameter sets from the marginal likelihood given observed data
"""
__author__ = "Reed Essick (reed.essick@gmail.com)"

#-------------------------------------------------

from argparse import ArgumentParser

### non-standard libraries
from mgpi import (io, utils)

#-------------------------------------------------

parser = ArgumentParser()

#---

igroup = parser.add_argument_group('input data')

igroup.add_argument('data', type=str,
    help='please provide an INI describing tabular data')
igroup.add_argument('--section', default=None, type=str,
    help='the section from the data INI that should be read.')

igroup.add_argument('interpolator', type=str,
    help='please provide an INI describing an interpolator')
igroup.add_argument('--kernel-params', default=None, type=str,
    help='if provided, we will compress the data for each set of the parameters within this file')

#---

wgroup = parser.add_argument_group('workflow options')

wgroup.add_argument('--seed', default=None, type=int)

#---

ogroup = parser.add_argument_group('output-arguments')

ogroup.add_argument('-v', '--verbose', default=False, action='store_true')
ogroup.add_argument('--time-execution', default=False, action='store_true')

ogroup.add_argument('outpath', type=str,
    help='the path into which we write compressed data')

#---

args = parser.parse_args()

args.verbose |= args.time_execution

#-------------------------------------------------

if args.seed is not None:
    utils.seed(args.seed, verbose=args.verbose)

#-------------------------------------------------

# load data
(source_x, source_f), (xcols, fcol) = io.parse_table(args.data, section=args.section, verbose=args.verbose)

# load interpolator
interpolator = io.parse_interpolator(args.interpolator, verbose=args.verbose)

#-------------------------------------------------

if args.verbose:
    print('sampling kernel params')

raise NotImplementedError('''

params, logprob, _ = interpolator.sample_kernel(
    source_x,
    source_f,
    logprior=None,
    fixed=None,
    temperature=DEFAULT_TEMPERATURE,
    num_burnin=DEFAULT_NUM_BURNIN,
    num_samples=DEFAULT_NUM_SAMPLES,
    num_walkers=DEFAULT_NUM_WALKERS,
    verbose=args.time_execution,
)

''')

#------------------------

# write kernel parameters to disk
raise NotImplementedError
